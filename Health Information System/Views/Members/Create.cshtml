@model Health_Information_System.Models.Members

@{
    Layout = "~/Views/Shared/_MemberLayout.cshtml";
    ViewBag.Title = "Member Information";
}

<h2>Member Information</h2>

<ul class="nav nav-tabs" role="tablist">
    <li role="presentation" class="active"><a href="#memberdetails" aria-controls="memberdetails" role="tab" data-toggle="tab">Member Details</a></li>
    <li role="presentation"><a href="#address" aria-controls="address" role="tab" data-toggle="tab">Address</a></li>
    <li role="presentation"><a href="#bankdetails" aria-controls="bankdetails" role="tab" data-toggle="tab">Bank Information</a></li>
</ul>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <div class="tab-content">
            <div role="tabpanel" class="tab-pane fade in active" id="memberdetails">
                @Html.ValidationSummary(true, "", new { @class = "alert alert-dismissible alert-danger" })
                <div class="col-sm-12">
                    <div class="row">
                        <div class="col-sm-4 form-group">
                            @Html.LabelFor(model => model.SegregatedFundID, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownList("SegregatedFundID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SegregatedFundID, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-4 form-group"></div>
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="row">
                        <div class="col-sm-4 form-group">
                            @Html.LabelFor(model => model.MemberStatusID, htmlAttributes: new { @class = "control-label" })
                            @Html.EnumDropDownListFor(model => model.MemberStatusID, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.MemberStatusID, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-3 form-group">
                            @Html.LabelFor(model => model.MemberNo, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.MemberNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.MemberNo, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-1">
                            @Html.Label("Suffix", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Suffix, new { htmlAttributes = new { @class = "form-control", @style = "width:0.2em", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Suffix, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="row">
                        <div class="col-sm-4 form-group">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                            @Html.EnumDropDownListFor(model => model.Title, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-4 form-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="row">
                        <div class="col-sm-4 form-group">
                            @Html.LabelFor(model => model.Initials, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Initials, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Initials, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-4 form-group">
                            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="row">
                        <div class="col-sm-4 form-group">
                            @Html.LabelFor(model => model.NationalIDNo, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.NationalIDNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NationalIDNo, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-4 form-group">

                        </div>
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="row">
                        <div class="col-sm-4 form-group">
                            @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label" })
                            @Html.EnumDropDownListFor(model => model.Sex, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-4 form-group">
                            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-4 form-group">
                            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="row">
                        <div class="col-sm-4 form-group">
                            @Html.LabelFor(model => model.MaritalStatus, htmlAttributes: new { @class = "control-label" })
                            @Html.EnumDropDownListFor(model => model.MaritalStatus, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-4 form-group">
                            @Html.LabelFor(model => model.Race, htmlAttributes: new { @class = "control-label" })
                            @Html.EnumDropDownListFor(model => model.Race, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Race, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="row">
                        <div class="col-sm-4 form-group">
                            @Html.LabelFor(model => model.DateOfJoining, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.DateOfJoining, new { htmlAttributes = new { @class = "form-control" } })<br />
                            @Html.ValidationMessageFor(model => model.DateOfJoining, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-4 form-group">
                            @Html.LabelFor(model => model.ExpiryDate, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.ExpiryDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ExpiryDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="row">
                        <div class="col-sm-4 form-group">
                            @Html.LabelFor(model => model.HomeNo, "Home Phone No", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.HomeNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.HomeNo, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-4 form-group">
                            @Html.LabelFor(model => model.CellphoneNo, "Cellphone No", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.CellphoneNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CellphoneNo, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-4 form-group">
                            @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <span class="input-group-addon">@@</span>
                                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-12">
                    <div class="row">
                        <div class="col-sm-4 form-group">
                            @Html.LabelFor(model => model.CompanyID, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.CompanyID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CompanyID, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-4 form-group">
                            @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.CategoryID, null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-4 form-group">
                            @Html.LabelFor(model => model.BillingGroupID, "BillingGroup", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownList("BillingGroupID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.BillingGroupID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="row">
                        <div class="col-sm-4 form-group">
                            @Html.LabelFor(model => model.Occupation, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Occupation, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Occupation, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-4 form-group">
                            @Html.LabelFor(model => model.NationalityID, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownList("NationalityID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NationalityID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-4">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
            <div role="tabpanel" class="tab-pane fade" id="address">@{Html.RenderAction("_Address", "_Address", Model);}</div>
            <div role="tabpanel" class="tab-pane fade" id="bankdetails">...</div>
        </div>
    </div>
            }

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
<script>
$(document).ready(function(){
    $(".nav-tabs a").click(function () {
        $(this).tab('show');
    });
});
</script>
            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
